# Input file for the langevin_LJ software
# All lines starting with # are ignored
# This file is case insensitive. 
# You can separate the couples "keyword value" by using blank spaces or tabulations.

# integration method to use : LANGEVIN or BROWNIAN
# friction coefficicent in ps^-1
# timestep in ps
METHOD LANGEVIN FRICTION 1.0 TIMESTEP 0.002

# non-bonded parameters : no PBC for the moment, openMM cutoff-cuton implemented with switching method : in nanometers (nm)
NONBOND NOPBC CUTON 1.2 CUTOFF 1.4
# example if no cutoff required ; may be faster for small systems
#NONBOND NOPBC NOCUT

# the number of atoms
NATOMS 147

# temperature in Kelvin
#  for rare gases be sure to choose not too high, specially for lighter elements 
#  otherwise the cluster just 'evaporates'
#  see rare_gases.xls for melting and boiling temperatures of the rare gases
TEMP   35

# number of steps : coded as an unsigned 64-bits integer so > 2 billions allowed
NSTEPS 25000000

# For each type of atom, set the mass and Lennard Jones parameters
#  units: amu, kj/mol and nanometers
#  see rare_gases.xls for some values
PARAMS    NE      MASS    20.1797  EPSILON  0.304958    SIGMA   0.2790
PARAMS    AR      MASS    39.9480  EPSILON  0.997680    SIGMA   0.3380
PARAMS    KR      MASS    83.7980  EPSILON  1.421694    SIGMA   0.3600
PARAMS    XE      MASS   131.2930  EPSILON  1.837394    SIGMA   0.4100

#reduced units may also work although friction timestep and temparature should also use reduced units otherwise crash
#PARAMS    AR      MASS    39.9480  EPSILON  1    SIGMA   1

# Build the atomic system
# cuton cutoff were in nm but coordinates will be in angstroems

#one type of atom, initial coordinates randomly generated within a volume of size sqrt(NATOMS)
ATOM    1   TO  END     AR   COOR    RANDOM

#or coordinates read from an existing xyz file : pseudo-restart
#ATOM    1   TO  END    AR   COOR    FILE   'last.xyz'

# example of binary system with @ types of atoms : there is no limit to number of species anyway
#  as long as they were all parametrized before in the params section
#ATOM    1   TO  13    KR   COOR    RANDOM
#ATOM    14  TO  END   AR   COOR    RANDOM

# save initial and final coordinates to xyz files
SAVE    COOR    FIRST   XYZ     'run147ar_init.xyz'
SAVE    COOR    LAST    XYZ     'run147ar_last.xyz'

# regularly save the trajectory to a file (dcd is the only available type for the moment, anyway xyz takes far too much disk space and is slow to read)
SAVE    COOR    TRAJ    DCD 'run147ar.dcd'  EACH    5000

# save energy to a binary file : see files in ./utils for files for reading it
#  save frequency should be the same that the one for trajectory
SAVE    ENER    'run147ar_ene.bin'  EACH  5000


